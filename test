
import * as XLSX from 'xlsx';

export class YourComponent {
  invalidEmails: string[] = [
    'invalid1@example.com',
    'invalid2@example.com',
    'invalid3@example.com',
    // Add more invalid emails as needed
  ];

  downloadFile() {
    // Generate worksheet from invalid emails
    const ws: XLSX.WorkSheet = XLSX.utils.json_to_sheet(this.invalidEmails.map(email => ({ email })));

    // Generate workbook and add the worksheet
    const wb: XLSX.WorkBook = XLSX.utils.book_new();
    XLSX.utils.book_append_sheet(wb, ws, 'Invalid Emails');

    // Generate binary string representation of the workbook
    const wbout: string = XLSX.write(wb, { bookType: 'xlsx', type: 'binary' });

    // Function to convert a string to an ArrayBuffer
    const s2ab = (s: string): ArrayBuffer => {
      const buf = new ArrayBuffer(s.length);
      const view = new Uint8Array(buf);
      for (let i = 0; i < s.length; i++) {
        view[i] = s.charCodeAt(i) & 0xFF;
      }
      return buf;
    };

    // Create a blob from the binary string and generate a download link
    const blob = new Blob([s2ab(wbout)], { type: 'application/octet-stream' });
    const url = window.URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = 'invalid_emails.xlsx';
    a.click();
    window.URL.revokeObjectURL(url);
  }
}
